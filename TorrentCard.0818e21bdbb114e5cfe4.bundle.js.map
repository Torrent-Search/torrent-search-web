{"version":3,"sources":["webpack:///./src/components/TorrentCard.js"],"names":["TorrentCard","e","mgDiv","document","getElementById","state","mgid","selection","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","getMagnetLink","props","torrent","website","toLowerCase","torrent_url","then","res","status","setState","magnetUrl","data","loading","catch","err","console","log","magnet","Key","prop","className","color","href","id","this","name","leechers","seeders","size","upload_date","uploader","type","data-toggle","data-target","aria-expanded","aria-controls","onClick","onMangetBtnClick","copyToClipBoard","BottomLayout","Component"],"mappings":"25GAGMA,Y,wkBACc,SAACC,GACjB,IAAIC,EAAQC,SAASC,eAAe,EAAKC,MAAMC,MAC3CC,EAAYC,OAAOC,eACnBC,EAAQP,SAASQ,cACrBD,EAAME,mBAAmBV,GACzBK,EAAUM,kBACVN,EAAUO,SAASJ,GACnBP,SAASY,YAAY,QACrBR,EAAUM,qB,wLAGO,SAACZ,GAClBe,4DACE,EAAKC,MAAMC,QAAQC,QAAQC,cAC3B,EAAKH,MAAMC,QAAQG,aAElBC,MAAK,SAACC,GACc,MAAfA,EAAIC,QACN,EAAKC,SAAS,CACZC,UAAWH,EAAII,KAAJ,OACXC,SAAS,OAIdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,S,4KAIV,CACNJ,UAAW,EAAKT,MAAMC,QAAQe,OAC9BL,SAAS,EACTtB,KAAM,KAAO,EAAKW,MAAMiB,M,oLAGX,SAACC,GACd,OAA2B,IAAvB,EAAK9B,MAAMuB,SAA6C,KAAzB,EAAKvB,MAAMqB,UAE1C,kEAAKU,UAAU,iBACb,2DAAC,iEAAD,CAAYC,MAAM,SAKpB,gEAAGC,KAAM,EAAKjC,MAAMqB,WAClB,kEAAKU,UAAU,iBAAiBG,GAAI,EAAKlC,MAAMC,MAC5C,EAAKD,MAAMqB,e,+HAQpB,OACE,kEAAKU,UAAU,+CACb,kEAAKA,UAAU,iDACb,yEAASI,KAAKvB,MAAMC,QAAQuB,OAE9B,kEAAKL,UAAU,8CACb,kEAAKA,UAAU,8BACb,kEAAKA,UAAU,OACb,sEACE,mEAAMA,UAAU,cAAhB,aAEF,sEACE,mEAAMA,UAAU,oBACbI,KAAKvB,MAAMC,QAAQwB,YAI1B,kEAAKN,UAAU,OACb,sEACE,mEAAMA,UAAU,cAAhB,YAEF,sEACE,mEAAMA,UAAU,oBACbI,KAAKvB,MAAMC,QAAQyB,YAK5B,kEAAKP,UAAU,sCACb,kEAAKA,UAAU,OACb,sEACE,mEAAMA,UAAU,cAAhB,YAEF,sEACE,mEAAMA,UAAU,oBACbI,KAAKvB,MAAMC,QAAQC,WAK1B,kEAAKiB,UAAU,OACb,sEACE,mEAAMA,UAAU,cAAhB,QAAyC,KAE3C,sEACE,mEAAMA,UAAU,oBACbI,KAAKvB,MAAMC,QAAQ0B,SAK5B,kEAAKR,UAAU,sCACb,kEAAKA,UAAU,OACb,sEACE,mEAAMA,UAAU,cAAhB,gBAEF,sEACE,mEAAMA,UAAU,oBACbI,KAAKvB,MAAMC,QAAQ2B,eAI1B,kEAAKT,UAAU,OACb,sEACE,mEAAMA,UAAU,cAAhB,aAEF,sEACE,mEAAMA,UAAU,oBACbI,KAAKvB,MAAMC,QAAQ4B,cAO9B,kEAAKV,UAAU,mCACb,qEACEA,UAAU,yBACVW,KAAK,SACLC,cAAY,WACZC,cAAa,KAAOT,KAAKvB,MAAMiB,IAC/BgB,gBAAc,QACdC,gBAAe,KAAOX,KAAKvB,MAAMiB,IACjCkB,QAASZ,KAAKa,kBAPhB,eAY0B,KAAzBb,KAAKnC,MAAMqB,UACV,qEACEU,UAAU,yBACVW,KAAK,SACLK,QAASZ,KAAKc,iBAHhB,qBAOE,MAEN,kEAAKlB,UAAU,WAAWG,GAAI,IAAMC,KAAKvB,MAAMiB,KAC7C,kEAAKE,UAAU,mCACb,kEAAKA,UAAU,mBACb,gEAAMmB,aAAN,Y,wIA5JYC,8C,SAqKXxD,Y,2BAAA,qC,qIArKTA,Y","file":"TorrentCard.0818e21bdbb114e5cfe4.bundle.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMagnetLink } from \"../utils/network_utils\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nclass TorrentCard extends Component {\r\n  copyToClipBoard = (e) => {\r\n    var mgDiv = document.getElementById(this.state.mgid);\r\n    let selection = window.getSelection();\r\n    let range = document.createRange();\r\n    range.selectNodeContents(mgDiv);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    document.execCommand(\"copy\");\r\n    selection.removeAllRanges();\r\n  };\r\n\r\n  onMangetBtnClick = (e) => {\r\n    getMagnetLink(\r\n      this.props.torrent.website.toLowerCase(),\r\n      this.props.torrent.torrent_url\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            magnetUrl: res.data[\"magnet\"],\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  state = {\r\n    magnetUrl: this.props.torrent.magnet,\r\n    loading: false,\r\n    mgid: \"mg\" + this.props.Key,\r\n  };\r\n\r\n  BottomLayout = (prop) => {\r\n    if (this.state.loading === true || this.state.magnetUrl === \"\") {\r\n      return (\r\n        <div className=\"container p-5\">\r\n          <ClipLoader color=\"red\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <a href={this.state.magnetUrl}>\r\n          <div className=\"limit-word p-2\" id={this.state.mgid}>\r\n            {this.state.magnetUrl}\r\n          </div>\r\n        </a>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"border-black Br-10px elevated-card grey-bg \">\r\n        <div className=\"text-center p-3 card-title-custom br-10px-top\">\r\n          <strong>{this.props.torrent.name}</strong>\r\n        </div>\r\n        <div className=\"justify-content-center pr-3 pl-3 pt-4 pb-4\">\r\n          <div className=\"row justify-content-around\">\r\n            <div className=\"col\">\r\n              <div>\r\n                <span className=\"font-small\">Leechers</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-weight-bold\">\r\n                  {this.props.torrent.leechers}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div>\r\n                <span className=\"font-small\">Seeders</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-weight-bold\">\r\n                  {this.props.torrent.seeders}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-around p2 mt-2\">\r\n            <div className=\"col\">\r\n              <div>\r\n                <span className=\"font-small\">Website</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-weight-bold\">\r\n                  {this.props.torrent.website}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <div>\r\n                <span className=\"font-small\">Size</span>{\" \"}\r\n              </div>\r\n              <div>\r\n                <span className=\"font-weight-bold\">\r\n                  {this.props.torrent.size}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-around p2 mt-2\">\r\n            <div className=\"col\">\r\n              <div>\r\n                <span className=\"font-small\">Uploaded On</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-weight-bold\">\r\n                  {this.props.torrent.upload_date}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div>\r\n                <span className=\"font-small\">Uploader</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-weight-bold\">\r\n                  {this.props.torrent.uploader}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-around pb-3\">\r\n          <button\r\n            className=\"btn btn-outline-danger\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target={\"#c\" + this.props.Key}\r\n            aria-expanded=\"false\"\r\n            aria-controls={\"#c\" + this.props.Key}\r\n            onClick={this.onMangetBtnClick}\r\n          >\r\n            Magnet Link\r\n          </button>\r\n\r\n          {this.state.magnetUrl !== \"\" ? (\r\n            <button\r\n              className=\"btn btn-outline-danger\"\r\n              type=\"button\"\r\n              onClick={this.copyToClipBoard}\r\n            >\r\n              Copy to Clipboard\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"collapse\" id={\"c\" + this.props.Key}>\r\n          <div className=\"row justify-content-around pb-3\">\r\n            <div className=\"col text-center\">\r\n              <this.BottomLayout />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TorrentCard;\r\n"],"sourceRoot":""}